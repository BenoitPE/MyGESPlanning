"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.register = void 0;
const colors_1 = __importDefault(require("colors"));
const moment_1 = __importDefault(require("moment"));
const commands_base_1 = require("../../commands-base");
const configurator = __importStar(require("../../config"));
const display = __importStar(require("../../display"));
const ges_api_1 = require("../../ges-api");
const show_1 = require("./show");
function register(program) {
    program
        .command('steps [id]')
        .option('-a, --all', 'All next steps')
        .option('-n, --next', 'All next steps')
        .option('-y, --year <year>', 'pre-select a year')
        .option('-r, --raw', 'output the raw data')
        .action((0, commands_base_1.errorHandler)(action));
}
exports.register = register;
async function action(id, options) {
    const config = await configurator.load(true);
    const api = new ges_api_1.GesAPI(config);
    if (options.all) {
        const steps = await api.getNextProjectSteps();
        if (options.raw) {
            console.log(JSON.stringify(steps));
            return;
        }
        display.table(steps.map((step) => ({
            'Project ID': step.pro_id,
            Type: step.psp_type,
            'Limit Date': (0, moment_1.default)(step.psp_limit_date).format('LL'),
            'Project Name': step.pro_name,
            Course: step.course_name,
        })));
        return;
    }
    const project = await (0, show_1.getProject)(id, options);
    const print = (name, value) => {
        console.log(`${colors_1.default.cyan(name.padEnd(13, ' '))}${value}`);
    };
    print('ID', project.project_id);
    print('Project Name', project.name);
    project.steps
        .filter((step) => step.pro_id === project.project_id)
        .filter((step) => !options.next || step.psp_limit_date >= Date.now())
        .forEach((step) => {
        console.log('');
        print('Limit Date', (0, moment_1.default)(step.psp_limit_date).format('LL'));
        print('Type', step.psp_type);
        print('Description', step.psp_desc.trim());
    });
}
