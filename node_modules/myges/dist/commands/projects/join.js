"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.register = void 0;
const inquirer_1 = __importDefault(require("inquirer"));
const commands_base_1 = require("../../commands-base");
const configurator = __importStar(require("../../config"));
const ges_api_1 = require("../../ges-api");
const show_1 = require("./show");
function register(program) {
    program
        .command('join [id]')
        .option('-g, --group', 'pre-select a group')
        .option('-y, --year <year>', 'pre-select a year')
        .action((0, commands_base_1.errorHandler)(action));
}
exports.register = register;
async function action(id, options) {
    const config = await configurator.load(true);
    const api = new ges_api_1.GesAPI(config);
    const project = await (0, show_1.getProject)(id, options);
    const { uid } = await api.getProfile();
    let group = project.groups.find((group) => !!(group.project_group_students || []).find((student) => student.u_id === uid));
    if (group) {
        return console.error(`You already are in a group for this project (${group.group_name}).`);
    }
    if (!options.group) {
        const answers = await inquirer_1.default.prompt([
            {
                message: 'Select the group to join',
                name: 'group',
                type: 'list',
                choices: project.groups.map((group) => {
                    const students = (group.project_group_students || []).map((student) => `${student.firstname} ${student.name}`);
                    return {
                        name: group.group_name +
                            (students.length > 0 ? ` (${students.join(', ')})` : ''),
                        value: group.project_group_id,
                    };
                }),
            },
        ]);
        options.group = answers.group;
    }
    const numberValue = parseInt(options.group);
    if (isNaN(numberValue)) {
        return console.error('Incorrect group number.');
    }
    const groups = project.groups.sort((a, b) => a.project_group_id - b.project_group_id);
    if (numberValue > groups.length) {
        group = groups.find((group) => group.project_group_id == numberValue);
    }
    else {
        group = groups[numberValue - 1];
    }
    if (!group) {
        return console.error('Choosen group not found.');
    }
    try {
        await api.joinProjectGroup(project.rc_id, project.project_id, group.project_group_id);
        console.log('Successfully joined the group!');
    }
    catch (e) {
        if (options.debug) {
            console.error(e);
        }
        else {
            console.error("Failed to join the project's group.");
        }
    }
}
